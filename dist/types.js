window.api.ipcRenderer = window.api.ipcRenderer || null;
// window.api.constants = window.api.constants || null;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEhBLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQztBQUN4RCx1REFBdUQiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIENlbGx1bGFyQXV0b21hdGEgPSBcImNvbndheVwiIHwgXCJxLXN0YXRlXCJcclxudHlwZSBDZWxsdWxhckF1dG9tYXRhRGlzcGxheU5hbWUgPSBcIkNvbndheVwiIHwgXCJRLVN0YXRlXCJcclxuXHJcbnR5cGUgQXV0b21hdG9uT3B0aW9ucyA9IHtcclxuICAgIHNob3VsZFRyYWNlOiBib29sZWFuO1xyXG59XHJcblxyXG50eXBlIEN1c3RvbUF1dG9tYXRvbk9wdGlvbnMgPSB7IFtuYW1lOiBzdHJpbmddOiB1bmtub3duIH1cclxuXHJcbmludGVyZmFjZSBBdXRvbWF0b24ge1xyXG5cclxuICAgIGlkOiBDZWxsdWxhckF1dG9tYXRhO1xyXG4gICAgbmFtZTogQ2VsbHVsYXJBdXRvbWF0YURpc3BsYXlOYW1lO1xyXG4gICAgb3B0aW9uczogQXV0b21hdG9uT3B0aW9ucztcclxuICAgIGN1c3RvbU9wdGlvbnM6IEN1c3RvbUF1dG9tYXRvbk9wdGlvbnM7XHJcbiAgICBidWZmZXI6IG51bWJlcltdW107XHJcbiAgICBkaW1lbnNpb25zOiBUd29EVmVjdG9yO1xyXG4gICAgZ2VuZXJhdGlvbjogbnVtYmVyO1xyXG4gICAgXHJcbiAgICBzZXRDdXN0b21PcHRpb246IChuYW1lOiBzdHJpbmcsIHZhbHVlOiB1bmtub3duKSA9PiB2b2lkO1xyXG4gICAgZ2V0Q3VzdG9tT3B0aW9uOiA8VD4obmFtZTogc3RyaW5nKSA9PiBUO1xyXG4gICAgc2V0UGl4ZWw6IChjb29yZDogVHdvRFZlY3RvciwgdmFsdWU/OiBudW1iZXIpID0+IHZvaWQ7XHJcbiAgICBjbGVhclBpeGVsOiAoY29vcmQ6IFR3b0RWZWN0b3IpID0+IHZvaWQ7XHJcbiAgICBnZXRDdXJyZW50U3RhdGU6ICgpID0+IFN0YXRlO1xyXG4gICAgZ2V0TmV4dFN0YXRlOiAoKSA9PiBTdGF0ZTtcclxuICAgIGdldENvbG9yTWFwOiAoKSA9PiBDb2xvck1hcDtcclxuICAgIHJlc2l6ZTogKGRpbWVuc2lvbnM6IFR3b0RWZWN0b3IpID0+IHZvaWQ7XHJcbiAgICBjbGVhcjogKCkgPT4gdm9pZDtcclxuICAgIGlzRW1wdHk6ICgpID0+IGJvb2xlYW47XHJcbiAgICB0b1N0cmluZzogKCkgPT4gc3RyaW5nO1xyXG5cclxufVxyXG5cclxudHlwZSBBdXRvbWF0b25QcmVzZXQgPSB7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBkYXRhOiBzdHJpbmc7XHJcbn1cclxuXHJcbnR5cGUgQ29uZmlnID0ge1xyXG4gICAgZnBzOiBudW1iZXI7XHJcbiAgICBvcHRpb25zOiBBdXRvbWF0b25PcHRpb25zO1xyXG4gICAgY3VzdG9tT3B0aW9uczoge1xyXG4gICAgICAgIFtrZXkgaW4gQ2VsbHVsYXJBdXRvbWF0YV06IEN1c3RvbUF1dG9tYXRvbk9wdGlvbnM7XHJcbiAgICB9O1xyXG59XHJcblxyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbnR5cGUgVHdvRFZlY3RvciA9IHtcclxuICAgIHg6IG51bWJlcjtcclxuICAgIHk6IG51bWJlcjtcclxufVxyXG5cclxudHlwZSBDb2xvck1hcCA9IHsgW3N0YXRlOiBudW1iZXJdOiBzdHJpbmcgfVxyXG5cclxudHlwZSBTdGF0ZSA9IHtcclxuICAgIGRhdGE6IG51bWJlcltdW107XHJcbiAgICBtYXA6IENvbG9yTWFwO1xyXG4gICAgdHJhY2VOdW1iZXI6IG51bWJlcjtcclxufVxyXG5cclxudHlwZSBUaGVtZSA9IHtcclxuXHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDYW52YXMgYmFja2dyb3VuZCBjb2xvclxyXG4gICAgICovXHJcbiAgICBwcmltYXJ5Q29sb3I6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIFRvb2xiYXIgYmFja2dyb3VuZCBjb2xvclxyXG4gICAgICovXHJcbiAgICBzZWNvbmRhcnlDb2xvcjogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUGl4ZWwgYW5kIHRleHQgY29sb3JcclxuICAgICAqL1xyXG4gICAgdGVydGlhcnlDb2xvcjogc3RyaW5nO1xyXG5cclxufVxyXG5cclxudHlwZSBTdG9yZUtleXMgPSBcInRoZW1lXCI7XHJcblxyXG50eXBlIFN0b3JlQXJnczxUID0gc3RyaW5nPiA9IHtcclxuICAgIHN1Y2Nlc3M6IGJvb2xlYW47XHJcbiAgICBrZXk6IFN0b3JlS2V5cztcclxuICAgIHZhbHVlOiBUO1xyXG59XHJcblxyXG50eXBlIENoYW5uZWwgPSBcInNldC1waXhlbFNpemVcIiB8IFwic2V0LWNhbnZhc1wiIHwgXCJjbGVhci1jYW52YXNcIiB8IFwic2V0LXBpeGVsXCIgfCBcImNsZWFyLXBpeGVsXCIgfCBcImdldC1uZXh0U3RhdGVcIiB8IFwic2V0LWF1dG9tYXRvblwiIHwgXCJnZXQtY29sb3JNYXBcIiB8IFwiZ2V0LWZwc1wiIHwgXCJzZXQtZnBzXCIgfCBcImdldC1zaG91bGRUcmFjZVwiIHwgXCJzZXQtc2hvdWxkVHJhY2VcIiB8IFwic2F2ZS1jYW52YXNcIiB8IFwibG9hZC1wcmVzZXRcIiB8IFwiZ2V0LWNlbGx1bGFyQXV0b21hdGFcIiB8IFwiZ2V0LWN1c3RvbU9wdGlvblwiIHwgXCJzZXQtY3VzdG9tT3B0aW9uXCI7XHJcblxyXG50eXBlIEV4cG9zZWRJcGNSZW5kZXJlciA9IHtcclxuXHJcbiAgICBzZW5kOiAoY2hhbm5lbDogQ2hhbm5lbCwgLi4uYXJnczogdW5rbm93bltdKSA9PiB2b2lkO1xyXG4gICAgb246IChcclxuICAgICAgICBjaGFubmVsOiBDaGFubmVsLFxyXG4gICAgICAgIGZ1bmM6ICguLi5hcmdzOiB1bmtub3duW10pID0+IHZvaWRcclxuICAgICkgPT4gdm9pZDtcclxuICAgIGludm9rZTogPFQ+KFxyXG4gICAgICAgIGNoYW5uZWw6IENoYW5uZWwsXHJcbiAgICAgICAgLi4uYXJnczogdW5rbm93bltdXHJcbiAgICApID0+IFByb21pc2U8VD47XHJcbiAgICAvLyBoYW5kbGU6IChcclxuICAgIC8vICAgICBjaGFubmVsOiBzdHJpbmcsXHJcbiAgICAvLyAgICAgZnVuYzogKC4uLmFyZ3M6IHVua25vd25bXSkgPT4gUHJvbWlzZTx1bmtub3duPlxyXG4gICAgLy8gKSA9PiB2b2lkO1xyXG5cclxufTtcclxuXHJcbi8vIHR5cGUgU3RvcmVDaGFubmVsID0gXCJSZWFkQ29uZmlnLVJlcXVlc3RcIiB8IFwiUmVhZENvbmZpZy1SZXNwb25zZVwiIHwgXCJSZWFkVW5wcm90ZWN0ZWRDb25maWctUmVxdWVzdFwiIHwgXCJSZWFkVW5wcm90ZWN0ZWRDb25maWctUmVzcG9uc2VcIiB8IFwiV3JpdGVDb25maWctUmVxdWVzdFwiIHwgXCJXcml0ZUNvbmZpZy1SZXNwb25zZVwiIHwgXCJXcml0ZVVucHJvdGVjdGVkQ29uZmlnLVJlcXVlc3RcIiB8IFwiV3JpdGVVbnByb3RlY3RlZENvbmZpZy1SZXNwb25zZVwiIHwgXCJEZWxldGVDb25maWctUmVxdWVzdFwiIHwgXCJEZWxldGVDb25maWctUmVzcG9uc2VcIiB8IFwiRGVsZXRlVW5wcm90ZWN0ZWRDb25maWctUmVxdWVzdFwiIHwgXCJEZWxldGVVbnByb3RlY3RlZENvbmZpZy1SZXNwb25zZVwiIHwgXCJTYXZlUGFzc2tleS1SZXF1ZXN0XCIgfCBcIlNhdmVQYXNza2V5LVJlc3BvbnNlXCIgfCBcIlVzZUNvbmZpZ0luTWFpbi1SZXF1ZXN0XCIgfCBcIlVzZUNvbmZpZ0luTWFpbi1SZXNwb25zZVwiIHwgXCJVc2VVbnByb3RlY3RlZENvbmZpZ0luTWFpbi1SZXF1ZXN0XCIgfCBcIlVzZVVucHJvdGVjdGVkQ29uZmlnSW5NYWluLVJlc3BvbnNlXCI7XHJcblxyXG4vLyB0eXBlIEV4cG9zZWRTdG9yZSA9IHtcclxuLy8gICAgIG9uUmVjZWl2ZTogKGNoYW5uZWw6IFN0b3JlQ2hhbm5lbCwgZnVuYzogKGFyZ3M6IFN0b3JlQXJncykgPT4gdm9pZCkgPT4gdm9pZDtcclxuLy8gICAgIHNlbmQ6IChjaGFubmVsOiBTdG9yZUNoYW5uZWwsIC4uLmFyZ3M6IHVua25vd25bXSkgPT4gdm9pZDtcclxuLy8gfVxyXG5cclxudHlwZSBFeHBvc2VkQXBpID0ge1xyXG4gICAgaXNEZXY6IGJvb2xlYW47XHJcbiAgICBpcGNSZW5kZXJlcjogRXhwb3NlZElwY1JlbmRlcmVyO1xyXG4gICAgLy8gc3RvcmU6IEV4cG9zZWRTdG9yZTtcclxufVxyXG5cclxuaW50ZXJmYWNlIFdpbmRvdyB7XHJcbiAgICBhcGk6IEV4cG9zZWRBcGk7XHJcbn1cclxuXHJcbndpbmRvdy5hcGkuaXBjUmVuZGVyZXIgPSB3aW5kb3cuYXBpLmlwY1JlbmRlcmVyIHx8IG51bGw7XHJcbi8vIHdpbmRvdy5hcGkuY29uc3RhbnRzID0gd2luZG93LmFwaS5jb25zdGFudHMgfHwgbnVsbDsiXX0=